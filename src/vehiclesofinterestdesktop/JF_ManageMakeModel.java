/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vehiclesofinterestdesktop;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Brian
 */
public class JF_ManageMakeModel extends javax.swing.JFrame {

    /**
     * Creates new form JF_ManageMakeModel
     */
    public JF_ManageMakeModel() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jL_Make = new javax.swing.JLabel();
        jCB_Make = new javax.swing.JComboBox<>();
        jL_Model = new javax.swing.JLabel();
        jCB_Model = new javax.swing.JComboBox<>();
        jL_Make2 = new javax.swing.JLabel();
        jTF_Make = new java.awt.TextField();
        jL_Model2 = new javax.swing.JLabel();
        jTF_Model = new java.awt.TextField();
        jbt_Create = new javax.swing.JButton();
        jbt_DeleteSelected = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Make / Model");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                windowFirstOpens(evt);
            }
        });

        jL_Make.setText("Make");

        jCB_Make.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCB_Make.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                makeChanged(evt);
            }
        });

        jL_Model.setText("Model");

        jCB_Model.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jL_Make2.setText("Make");

        jTF_Make.setText("textField1");

        jL_Model2.setText("Model");

        jTF_Model.setText("textField2");

        jbt_Create.setText("Create New");
        jbt_Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_CreateActionPerformed(evt);
            }
        });

        jbt_DeleteSelected.setText("Delete Selected");
        jbt_DeleteSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_DeleteSelectedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jL_Make)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCB_Make, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jL_Model, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCB_Model, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbt_Create)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbt_DeleteSelected)
                        .addGap(30, 30, 30))))
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jL_Make2)
                    .addComponent(jL_Model2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTF_Make, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTF_Model, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCB_Make, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB_Model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_Make)
                    .addComponent(jL_Model))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_Make2)
                    .addComponent(jTF_Make, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTF_Model, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_Model2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbt_Create)
                    .addComponent(jbt_DeleteSelected))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbt_CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_CreateActionPerformed
        String make = jTF_Make.getText();
        String model=jTF_Model.getText();
        
        //ERROR: there is: (no make or model) OR (There is a model with no Make)
        if ((make.equals("") && model.equals("")) || (model.length() > 0 && make.equals(""))) {
            //POPUP FOR EMPTY STRING
            JOptionPane.showMessageDialog(this,"Missing Required Field");
        } 

        //There is a Make but no Model
        else if (make.length() > 0 && model.equals("")) {
            voi_c.createVehicleMake(jTF_Make.getText());

            //Retrieve the Database Make's from loop through the array to add 
            String[] availableMakes = voi_c.allVehicleMakeKey();
            for (int x = 0; x < availableMakes.length; x++) {
                jCB_Make.addItem(availableMakes[x]);
            }
            JOptionPane.showMessageDialog(this, "Added:" + make);
        }
        
        //There is a Make and a Model
        else if (make.length() > 0 && model.length() > 0) {
            voi_c.createVehicleMake(make);
            voi_c.createVechileModel(model, make);
            JOptionPane.showMessageDialog(this, "Added:" + make + "-" + model);
        }
        //Catch all else statement
        else {
            JOptionPane.showMessageDialog(this, "Something else happened, try again");
        }
        
        //Housekeeping methods to clear the Checkbox and repopulate with values
        this.clearCBandTF();
        this.populateCB();
    }//GEN-LAST:event_jbt_CreateActionPerformed

    private void windowFirstOpens(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowFirstOpens
        //Remove all items from the Make and Model ComboBox
        this.clearCBandTF();
        this.populateCB();
    }//GEN-LAST:event_windowFirstOpens

    private void clearCBandTF() {
        jCB_Make.removeAllItems();
        jCB_Model.removeAllItems();
        jTF_Make.setText("");
        jTF_Model.setText("");
    }

    private void populateCB() {
        //Retrieve the available Make's from the database and loop through the array to add 
        String[] make = voi_c.allVehicleMakeKey();
        for (int x = 0; x < make.length; x++) {
            jCB_Make.addItem(make[x]);
        }
    }
    
    private void makeChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_makeChanged
        //Clear all items from the model list because a new make was selected
        jCB_Model.removeAllItems();
        
        //Retrieve whatever the new selected make is
        String selectedMake = jCB_Make.getItemAt(jCB_Make.getSelectedIndex());
        
        //Retrieve the models associated with that Make/add to Combo box
        this.getSpecificModel(selectedMake);
        
        //Update the text fields with whatever is in the Combo boxes as selected
        this.jTF_Make.setText(selectedMake);
        this.jTF_Model.setText((String) this.jCB_Model.getSelectedItem());
    }//GEN-LAST:event_makeChanged

    public ArrayList<String> getSpecificModel(String make) {

        ArrayList<String> specificModels = new ArrayList<String>();
        String[][] dbMakeModels = voi_c.allVehicleModel();

        for (int x = 0; x < dbMakeModels.length; x++) {
            //This reads the database table for make and add's the model to the list if the make matches
            if (dbMakeModels[x][1].equalsIgnoreCase(make)) {
                jCB_Model.addItem(dbMakeModels[x][0]);
                specificModels.add(dbMakeModels[x][0]);
            }
        }
        return specificModels;
    }
    
    private void jbt_DeleteSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_DeleteSelectedActionPerformed
        String make = null;
        String model = null;
        try {
            make = jCB_Make.getSelectedItem().toString();
            model = jCB_Model.getSelectedItem().toString();
        } catch (Exception e) {
            model = "";
        }
        
        //ERROR: there is: (no make or model) OR (they are both null)
        if (make.equals("") && model.equals("") || ((model == null) && (make == null))) {
            //POPUP FOR EMPTY STRING
            JOptionPane.showMessageDialog(this, "Missing required field");
        }

        //There is a Make but no Model
        else if ((make.length() > 0 && model.equals(""))||(make.length() > 0 && model==null)) {
            voi_c.deleteVehicleMake(make);
            JOptionPane.showMessageDialog(this,"Deleted:" + make);
        }
        
        //There is a Make and a Model
        else if (make.length() > 0 && model.length() > 0) {
            voi_c.deleteVehicleModel(model);
            JOptionPane.showMessageDialog(this,"Deleted:" + model + " from the list of:"+make+"'s");
        }
        
        //Catch all else statement
        else {
            JOptionPane.showMessageDialog(this, "Something else happened, try again");
        }
        
        //Housekeeping methods to clear the Checkbox and re-populate with values
        this.clearCBandTF();
        this.populateCB();   
    }//GEN-LAST:event_jbt_DeleteSelectedActionPerformed

    public String [][] getMakesModels(){
    return voi_c.allVehicleModel();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("LiteAF".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JF_ManageMakeModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JF_ManageMakeModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JF_ManageMakeModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JF_ManageMakeModel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JF_ManageMakeModel().setVisible(true);
            }
        });
    }
    private VehiclesOfInterestController voi_c = new VehiclesOfInterestController();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCB_Make;
    private javax.swing.JComboBox<String> jCB_Model;
    private javax.swing.JLabel jL_Make;
    private javax.swing.JLabel jL_Make2;
    private javax.swing.JLabel jL_Model;
    private javax.swing.JLabel jL_Model2;
    private java.awt.TextField jTF_Make;
    private java.awt.TextField jTF_Model;
    private javax.swing.JButton jbt_Create;
    private javax.swing.JButton jbt_DeleteSelected;
    // End of variables declaration//GEN-END:variables
}
